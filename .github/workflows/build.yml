name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Omogoƒçi bolj relevantno analizo

      # Nastavitev JDK za Maven analizo (Backend)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Backend Build in analiza
      - name: Build and analyze Backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B -f wha/pom.xml verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=01developer1_wha

      # Nastavitev Node.js (16.3.0)
      - name: Set up Node.js 16.3.0
        uses: actions/setup-node@v4
        with:
          node-version: '16.3.0'

      - name: Install Frontend dependencies
        run: |
          cd Frontend/frontend
          npm install

      # Frontend analiza s SonarScanner
      - name: Analyze Frontend code
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd Frontend/frontend
          npx sonarqube-scanner \
            -Dsonar.projectKey=01developer1_wha \
            -Dsonar.sources=src \
            -Dsonar.exclusions=**/node_modules/** \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
